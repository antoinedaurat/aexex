{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/antoine/Gdrive/Autoencoders/axx/frontend/src/components/Waveform.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport \"./Waveform.css\";\n\nconst waveSurferOptions = ref => ({\n  container: ref,\n  waveColor: \"lightgray\",\n  progressColor: \"#2682b4\",\n  cursorColor: \"#2682b4\",\n  barWidth: 1,\n  barHeight: 4,\n  maxCanvasWidth: 200,\n  responsive: true,\n  height: 50,\n  // Use the PeakCache to improve rendering speed of large waveforms.\n  partialRender: false\n});\n\nexport default function Waveform({\n  url,\n  title,\n  handleFinish\n}) {\n  _s();\n\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [playing, setPlay] = useState(false); // create new WaveSurfer instance\n  // On component mount and when url changes\n\n  useEffect(() => {\n    setPlay(false);\n    const options = waveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.load(url);\n    wavesurfer.current.on(\"ready\", function () {\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(0.5);\n      }\n\n      wavesurfer.current.on(\"seek\", () => {\n        setPlay(true);\n        wavesurfer.current.play();\n      });\n      wavesurfer.current.on(\"finish\", () => {\n        handleFinish();\n        setPlay(false);\n      });\n    }); // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n\n    return () => wavesurfer.current.destroy();\n  }, [url]);\n\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    wavesurfer.current.playPause();\n  };\n\n  return (\n    /*#__PURE__*/\n    // the container\n    _jsxDEV(\"div\", {\n      className: \"waveform-element\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"play-button fa \" + (playing ? \"fa-pause-circle\" : \"fa-play-circle-o\"),\n          id: `play-${title}`,\n          onClick: handlePlayPause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"waveform-title\",\n          children: \"  \" + title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform\",\n        ref: waveformRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Waveform, \"Jmx+zvf4JHxf4nIRux/BudVK/Q8=\");\n\n_c = Waveform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Waveform\");","map":{"version":3,"sources":["/home/antoine/Gdrive/Autoencoders/axx/frontend/src/components/Waveform.jsx"],"names":["React","useEffect","useRef","useState","WaveSurfer","waveSurferOptions","ref","container","waveColor","progressColor","cursorColor","barWidth","barHeight","maxCanvasWidth","responsive","height","partialRender","Waveform","url","title","handleFinish","waveformRef","wavesurfer","playing","setPlay","options","current","create","load","on","setVolume","play","destroy","handlePlayPause","playPause"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\n\nimport \"./Waveform.css\";\n\n\nconst waveSurferOptions = ref => ({\n    container: ref,\n    waveColor: \"lightgray\",\n    progressColor: \"#2682b4\",\n    cursorColor: \"#2682b4\",\n    barWidth: 1,\n    barHeight: 4,\n    maxCanvasWidth: 200,\n    responsive: true,\n    height: 50,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: false\n});\n\nexport default function Waveform({url, title, handleFinish}) {\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlay] = useState(false);\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n\n        const options = waveSurferOptions(waveformRef.current);\n        wavesurfer.current = WaveSurfer.create(options);\n\n        wavesurfer.current.load(url);\n\n        wavesurfer.current.on(\"ready\", function () {\n            if (wavesurfer.current) {\n                wavesurfer.current.setVolume(0.5);\n            }\n        wavesurfer.current.on(\"seek\", () => {\n            setPlay(true);\n            wavesurfer.current.play()\n        });\n        wavesurfer.current.on(\"finish\", () => {\n            handleFinish()\n            setPlay(false)\n        });\n        });\n        // Removes events, elements and disconnects Web Audio nodes.\n        // when component unmount\n        return () => wavesurfer.current.destroy();\n    }, [url]);\n\n    const handlePlayPause = () => {\n        setPlay(!playing);\n        wavesurfer.current.playPause();\n    };\n\n    return (\n        // the container\n        <div className={\"waveform-element\"}>\n            {/* the header */}\n            <div className={\"waveform-header\"}>\n                <i className={\"play-button fa \" + (playing ? \"fa-pause-circle\" : \"fa-play-circle-o\")}\n                   id={`play-${title}`}\n                   onClick={handlePlayPause}>\n                </i>\n                <span className={\"waveform-title\"}>\n                {\"  \" + title}\n                </span>\n            </div>\n            {/* the waveform (ui kit must be turned off for it to display correctly) */}\n            <div className={\"waveform\"}\n                 ref={waveformRef}>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}