[{"/home/antoine/Gdrive/Autoencoders/axx/frontend/src/index.tsx":"1","/home/antoine/Gdrive/Autoencoders/axx/frontend/src/reportWebVitals.ts":"2","/home/antoine/Gdrive/Autoencoders/axx/frontend/src/App.tsx":"3","/home/antoine/Gdrive/Autoencoders/axx/frontend/src/components/ExperimentsTable.jsx":"4","/home/antoine/Gdrive/Autoencoders/axx/frontend/src/components/Waveform.jsx":"5"},{"size":478,"mtime":1611623072832,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1611623072832,"results":"8","hashOfConfig":"7"},{"size":1257,"mtime":1611623072832,"results":"9","hashOfConfig":"7"},{"size":14978,"mtime":1611624874712,"results":"10","hashOfConfig":"7"},{"size":2338,"mtime":1611623072832,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ri0028",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"/home/antoine/Gdrive/Autoencoders/axx/frontend/src/index.tsx",[],["26","27"],"/home/antoine/Gdrive/Autoencoders/axx/frontend/src/reportWebVitals.ts",[],"/home/antoine/Gdrive/Autoencoders/axx/frontend/src/App.tsx",["28","29"],"import React from \"react\";\nimport \"./App.css\";\n\nimport ExperimentsTable from \"./components/ExperimentsTable\";\n\nexport default class App extends React.Component<{}, { projectName: string, id: string }> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            projectName: \"\",\n            id: \"\",\n        }\n        this.onExperimentClick = this.onExperimentClick.bind(this);\n    }\n\n    onExperimentClick(proj: string, id: string) {\n        this.setState({projectName: proj.split(\"/\")[1], id: id})\n    }\n\n    render() {\n        const name = this.state.projectName;\n        const id = this.state.id;\n        return (\n            <div className={\"App\"}>\n                <div>\n                    <h3 id={\"logo\"}>\n                        {\"< a u d i o - e X p e r i m e n t - e X p l o r e r >\"}\n                    </h3>\n                </div>\n                <div>\n                    <ExperimentsTable />\n                </div>\n            </div>\n        );\n    }\n}\n/* - experiment header : ID, link to neptune, tags (= example's labels),( description,) losses, properties\n* - hparams tree (data, model, optim)\n* - list of available checkpoints\n* - POST : tag, description, note / comment,\n* - DELETE : audio, checkpoints\n* - */","/home/antoine/Gdrive/Autoencoders/axx/frontend/src/components/ExperimentsTable.jsx",["30","31","32","33","34"],"/home/antoine/Gdrive/Autoencoders/axx/frontend/src/components/Waveform.jsx",["35"],"import React, {useEffect, useRef, useState} from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\n\nimport \"./Waveform.css\";\n\n\nconst waveSurferOptions = ref => ({\n    container: ref,\n    waveColor: \"lightgray\",\n    progressColor: \"#2682b4\",\n    cursorColor: \"#2682b4\",\n    barWidth: 1,\n    barHeight: 4,\n    maxCanvasWidth: 200,\n    responsive: true,\n    height: 50,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: false\n});\n\nexport default function Waveform({url, title, handleFinish}) {\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlay] = useState(false);\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n\n        const options = waveSurferOptions(waveformRef.current);\n        wavesurfer.current = WaveSurfer.create(options);\n\n        wavesurfer.current.load(url);\n\n        wavesurfer.current.on(\"ready\", function () {\n            if (wavesurfer.current) {\n                wavesurfer.current.setVolume(0.5);\n            }\n        wavesurfer.current.on(\"seek\", () => {\n            setPlay(true);\n            wavesurfer.current.play()\n        });\n        wavesurfer.current.on(\"finish\", () => {\n            handleFinish()\n            setPlay(false)\n        });\n        });\n        // Removes events, elements and disconnects Web Audio nodes.\n        // when component unmount\n        return () => wavesurfer.current.destroy();\n    }, [url]);\n\n    const handlePlayPause = () => {\n        setPlay(!playing);\n        wavesurfer.current.playPause();\n    };\n\n    return (\n        // the container\n        <div className={\"waveform-element\"}>\n            {/* the header */}\n            <div className={\"waveform-header\"}>\n                <i className={\"play-button fa \" + (playing ? \"fa-pause-circle\" : \"fa-play-circle-o\")}\n                   id={`play-${title}`}\n                   onClick={handlePlayPause}>\n                </i>\n                <span className={\"waveform-title\"}>\n                {\"  \" + title}\n                </span>\n            </div>\n            {/* the waveform (ui kit must be turned off for it to display correctly) */}\n            <div className={\"waveform\"}\n                 ref={waveformRef}>\n            </div>\n        </div>\n    );\n}",["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":21,"column":15,"nodeType":"44","messageId":"45","endLine":21,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":22,"column":15,"nodeType":"44","messageId":"45","endLine":22,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":13},{"ruleId":"47","severity":1,"message":"49","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":18},{"ruleId":"47","severity":1,"message":"50","line":9,"column":5,"nodeType":"44","messageId":"45","endLine":9,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":143,"column":9,"nodeType":"44","messageId":"45","endLine":143,"endColumn":23},{"ruleId":"47","severity":1,"message":"52","line":145,"column":9,"nodeType":"44","messageId":"45","endLine":145,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":52,"column":8,"nodeType":"55","endLine":52,"endColumn":13,"suggestions":"56"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","no-unused-vars","'axios' is defined but never used.","'ReactTable' is defined but never used.","'useFilters' is defined but never used.","'visibleColumns' is assigned a value but never used.","'preGlobalFilteredRows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFinish'. Either include it or remove the dependency array. If 'handleFinish' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [handleFinish, url]",{"range":"62","text":"63"},[1514,1519],"[handleFinish, url]"]